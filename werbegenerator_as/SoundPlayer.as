package  {		import flash.net.URLRequest;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.events.*;	import Utils;	import flash.media.SoundTransform;	//import MetaDating;		public class SoundPlayer {		//--------------------------------------//  PRIVATE VARIABLES//--------------------------------------				private var req:URLRequest;		private var sound:Sound;		private var soundChannel:SoundChannel;		private var bPause:Boolean = false;		private var pausePoint:Number;		private var soundArray:Array;		private var mediaPath:String;		private var idx:int;		private var vol:Number;		//--------------------------------------//  CONSTRUCTORS//--------------------------------------		public function SoundPlayer() {			//req = new URLRequest();			sound = new Sound();			soundChannel = new SoundChannel();		}				/*		public function SoundPlayer(theSoundArray:String, theMediaPath:String)		{			soundArray = theSoundArray;			mediaPath = theMediaPath;			sound = new Sound();			soundChannel = new SoundChannel();		}		*/		//--------------------------------------//  PUBLIC METHODS//--------------------------------------		//--------------------------------------				public function playSound(file:String, theVolume:Number = 1.0):void		{			vol = theVolume;			this.sound.load(new URLRequest(file));			this.sound.addEventListener(Event.COMPLETE, soundLoaded);		}//--------------------------------------				/*		public function playSound(theIdx:int):void		{			if(soundArray != null && mediaPath != null)			{				idx = theIdx;				this.sound.load(new URLRequest(mediaPath + soundArray[idx]);				this.sound.addEventListener(Event.COMPLETE, soundLoaded);						}		}		*/	//--------------------------------------				public function stopSound():void		{			soundChannel.stop();			sound.close();		}		//--------------------------------------				public function togglePauseSound():void		{			if(!bPause)			{				pausePoint = soundChannel.position;				soundChannel.stop();				bPause = true;			}			else			{				soundChannel = sound.play(pausePoint);				bPause = false;				pausePoint = 0;			}		}		//--------------------------------------	public function nextSound():void	{			}	//--------------------------------------	public function previousSound():void	{			}	//--------------------------------------	public function repeatSound():void	{			}	//--------------------------------------	public function setVolume(theVolVal:Number):void	// doesn't work when called from an instance (why?)	{		//trace("Sound Volume: " + theVolVal);		var vol:SoundTransform = new SoundTransform(theVolVal);		this.soundChannel.soundTransform = vol;	}//--------------------------------------//  PRIVATE & PROTECTED INSTANCE METHODS//--------------------------------------		private function soundLoaded(e:Event):void		{			this.soundChannel = this.sound.play();			this.setVolume(vol);			trace("play Sound");		}		//--------------------------------------	}}